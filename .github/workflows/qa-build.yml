name: Build for QA üéÆ

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}

jobs:
  # Uncomment these out when we have developed tests for the game
  # =======================================================================
  # testRunner:
  #   name: üîé ${{ matrix.testMode }} Test
  #   runs-on: ubuntu-latest
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       testMode:
  #         - EditMode
  #         - PlayMode
  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v2

  #     - name: Create LFS file list
  #       run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

  #     - name: Restore LFS cache
  #       uses: actions/cache@v2
  #       id: lfs-cache
  #       with:
  #         path: .git/lfs
  #         key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

  #     - name: Git LFS Pull
  #       run: |
  #         git lfs pull
  #         git add .
  #         git reset --hard

  #     - name: Restore Library cache
  #       uses: actions/cache@v2
  #       with:
  #         path: Library
  #         key: Library-test-project-${{ matrix.targetPlatform }}
  #         restore-keys: |
  #           Library-test-project-
  #           Library-

  #     - name: Run Tests (Edit & Play mode)
  #       uses: game-ci/unity-test-runner@v2.0-alpha-6
  #       id: testRunner
  #       with:
  #         testMode: ${{ matrix.testMode }}
  #         checkName: ${{ matrix.testMode }} Test Results ‚ú®
  #         githubToken: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Upload test results
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: Test results (${{ matrix.testMode }})
  #         path: ${{ steps.testRunner.outputs.artifactsPath }}

  buildWebGL:
    # needs: testRunner
    name: üåê Build WebGL
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}

      - name: Git LFS Pull
        run: |
          git lfs pull
          git add .
          git reset --hard

      - name: Restore Library cache
        uses: actions/cache@v2
        with:
          path: Library
          key: Library-build-WebGL
          restore-keys: |
            Library-build-
            Library-

      - name: Build into WebGL
        continue-on-error: true
        uses: game-ci/unity-builder@4e7125603b7544961022d5a1fd09094b00918abd
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: WebGL

      - name: Upload Build
        uses: actions/upload-artifact@v2
        with:
          name: build-WebGL
          path: build/WebGL

  deployWebGL:
    needs: buildWebGL
    name: üö¢ Deploy WebGL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build-WebGL
          path: build

      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: build-webgl
          folder: build/WebGL

  notifyDiscord:
    needs: deployWebGL
    name: üì¢ Notify on Discord
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Notify Success
        if: ${{ needs.deployWebGL.result == 'success' }}
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.WEBHOOK_URL }}
          username: "${{ github.workflow }}"
          avatar-url: "https://media.discordapp.net/attachments/857447804977152000/894758305690452039/success_kid.png"
          title: "Test Build #${{ github.run_number }} status: SUCCESS!"
          description: |
            üåê Play the [test build on GitHub](https://PorridgeB.github.io/re-main/).
          include-details: "false"
          color-success: "#2eb886"

      - name: Notify Failure
        if: ${{ needs.deployWebGL.result != 'success' }}
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          discord-webhook: ${{ secrets.WEBHOOK_URL }}
          username: "${{ github.workflow }}"
          avatar-url: "https://media.discordapp.net/attachments/857447804977152000/894760486439125042/explosion.png"
          title: "Test Build #${{ github.run_number }} status: FAILED . . ."
          description: "Status of build phases"
          include-details: "true"
          color-failure: "#a30200"
          color-cancelled: "#a30200"
